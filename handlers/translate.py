from aiogram import Router, types
from deep_translator import GoogleTranslator
from keyboards import main_menu, language_menu

# –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
from .extras import add_to_history

router = Router()

# —Å–ª–æ–≤–∞—Ä—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_lang = {}

@router.message(lambda msg: msg.text in ["üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "üá™üá∏ –ò—Å–ø–∞–Ω—Å–∫–∏–π", "üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π", "üá´üá∑ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π"])
async def set_language(message: types.Message):
    langs = {
        "üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π": "en",
        "üá™üá∏ –ò—Å–ø–∞–Ω—Å–∫–∏–π": "es",
        "üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π": "de",
        "üá´üá∑ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π": "fr"
    }
    user_lang[message.from_user.id] = langs[message.text]
    await message.answer(f"‚úÖ –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {message.text}", reply_markup=main_menu())

@router.message(lambda msg: msg.text == "‚öôÔ∏è –í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞")
async def choose_language(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:", reply_markup=language_menu())

@router.message(lambda msg: msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_to_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç
@router.message(lambda msg: msg.text is not None and not msg.text.startswith('/') and msg.text not in ["üåç –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç", "üß† –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã"])
async def translate_text(message: types.Message):
    # —É–±–µ–¥–∏–º—Å—è —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç
    if not message.text:
        return

    lang = user_lang.get(message.from_user.id, 'en')
    text = message.text.strip()

    try:
        translated = GoogleTranslator(source='auto', target=lang).translate(text)
        # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é: "–æ—Ä–∏–≥–∏–Ω–∞–ª -> –ø–µ—Ä–µ–≤–æ–¥"
        add_to_history(message.from_user.id, f"{text} -> {translated}")
        await message.answer(f"üåê –ü–µ—Ä–µ–≤–æ–¥ ({lang}):\n<b>{translated}</b>")
    except Exception:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
